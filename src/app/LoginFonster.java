/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package testapplikation;

import java.util.logging.Level;
import java.util.logging.Logger;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import javax.swing.*;

/**
 *
 * @author mattiasmesserer
 */
public final class LoginFonster extends javax.swing.JFrame {

    private static InfDB idb;
    private static HashMap<String, String> AgentLogin;
    private static HashMap<String, String> AlienLogin;
    private static HashMap<String, String> AdminLogin;
    private String[] args;

    /**
     * Creates new form LoginFonster
     */
    public LoginFonster() {
        try {
            AgentLogin = new HashMap();
            AlienLogin = new HashMap();
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            hamtaLoginDataAlien();
            hamtaLoginDataAgent();
            initComponents();

        } catch (InfException ex) {
            Logger.getLogger(TestMainApplikation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void hamtaLoginDataAgent(){
        try {
            //Fyll HashMap med loginvalues för Agent
            int id = 0;
            String container = idb.fetchSingle("SELECT count(Namn) FROM Agent");
            int max = Integer.parseInt(container);
            
            //Iterera igenom databasen i Agent och hämtar samtliga user och pass värden och lägger
            // i Hashmappen
            while (id <= max) {
                String user = idb.fetchSingle("SELECT Namn FROM Agent WHERE Agent_ID=" + id);
                String pass = idb.fetchSingle("SELECT Losenord FROM Agent WHERE Agent_ID=" + id);
                AgentLogin.put(user, pass);
                id++;
                
            }
            System.out.println(AgentLogin.keySet());
            System.out.println(AgentLogin.values());
            
        } catch(Exception e){
            System.out.println("Nånting gick snett!");
        }
            
        
    }

    private void hamtaLoginDataAlien() {
        try {
            //Fyll HashMap med loginvalues för Alien
            int id = 0;
            String container = idb.fetchSingle("SELECT count(Namn) FROM Alien");
            int max = Integer.parseInt(container);
            
            while (id <= max ){
                String user = idb.fetchSingle("SELECT Namn FROM Alien WHERE Alien_ID=" + id);
                String pass = idb.fetchSingle("SELECT Losenord FROM Alien WHERE Alien_ID=" + id);
                AlienLogin.put(user, pass);
                id++;
            }
        } catch (InfException e) {
            System.out.println("Nånting gick snett!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelUserRubrik = new javax.swing.JLabel();
        txtLoginField = new javax.swing.JTextField();
        txtPassField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        labelPassRubrik = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelUserRubrik.setText("Username:");

        txtLoginField.setColumns(8);

        txtPassField.setColumns(8);

        labelPassRubrik.setText("Password:");

        jButton1.setText("Login");
        jButton1.setBounds(new java.awt.Rectangle(-32670, -32590, 78, 50));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(labelPassRubrik)
                    .addComponent(jLabel1)
                    .addComponent(txtPassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUserRubrik))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(labelUserRubrik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLoginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelPassRubrik)
                .addGap(4, 4, 4)
                .addComponent(txtPassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Hämtar inmatningen i Userrutan
        String user = txtLoginField.getText();
        //Hämtar inmatningen i Passwordrutan
        String pass = txtPassField.getText();
        try {
        //Kollar så att input i user finns som key i Hashmappen
        if(AlienLogin.containsKey(user)) {
            //Kollar så att user-värdet är lika med inmatningen i password
            if(AlienLogin.get(user).equals(pass)){
                //Popup ruta
                AlienFonster.main(args);
                
                JOptionPane.showMessageDialog(null, "Du är inloggad som alien!");
                //Här ska fönstret AlienFonster köras
                //------------
            }
        }
        //Denna bit kod körs ifall ovanstående ej går igenom och ifall inmatningen
        //är kopplad till en Agent istället
        else if(AgentLogin.containsKey(user)){
                if(AgentLogin.get(user).equals(pass)){
                    JOptionPane.showMessageDialog(null, "Du är inloggad som Agent!");
                    AgentFonster.main(args);
                    //Här ska fönstret AgentFonster köras
                }
             
            }
        
        }
        
        catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error!");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFonster().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelPassRubrik;
    private javax.swing.JLabel labelUserRubrik;
    private javax.swing.JTextField txtLoginField;
    private javax.swing.JPasswordField txtPassField;
    // End of variables declaration//GEN-END:variables
}
